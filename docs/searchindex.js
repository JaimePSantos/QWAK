Search.setIndex({"docnames": ["contributing", "index", "installation", "modules", "qwak", "usage", "utils"], "filenames": ["contributing.rst", "index.rst", "installation.rst", "modules.rst", "qwak.rst", "usage.rst", "utils.rst"], "titles": ["Contributing", "QWAK - Quantum Walk Analysis Kit", "Installation", "utils", "qwak package", "Usage", "utils package"], "terms": {"ha": [0, 4, 6], "few": 0, "addit": [0, 4], "step": [0, 2, 4, 6], "mai": 0, "requir": [0, 2, 4, 6], "some": [0, 2], "explan": 0, "first": [0, 2, 4, 6], "time": [0, 1, 4, 5, 6], "user": [0, 1, 4, 5], "here": [0, 6], "we": [0, 2, 6], "ll": 0, "give": [0, 4, 6], "you": [0, 1, 2, 5], "instruct": 0, "how": 0, "setup": [0, 2], "github": [0, 2], "thi": [0, 1, 2, 4, 6], "project": [0, 1, 6], "format": [0, 4, 6], "code": [0, 1, 2], "A": [0, 4, 6], "extra": 0, "ar": [0, 2, 4, 5, 6], "when": [0, 4, 6], "qwak": [0, 5], "pip": [0, 2], "instal": [0, 1], "autopep8": 0, "pytest": [0, 2], "bumpver": 0, "accord": 0, "pep": 0, "8": [0, 6], "style": [0, 6], "i": [0, 1, 2, 4, 6], "respons": [0, 6], "unit": [0, 2], "test": [0, 1], "assur": [0, 2], "everyth": 0, "work": [0, 1, 6], "correctli": 0, "after": [0, 2, 4], "manag": 0, "version": [0, 4], "git": [0, 2], "fork": 0, "repositori": [0, 2], "account": 0, "so": [0, 2, 4], "can": [0, 2, 4, 5, 6], "own": 0, "copi": [0, 4], "allow": [0, 2, 4, 5], "open": [0, 2, 4], "pull": 0, "request": 0, "later": 0, "add": 0, "upstream": 0, "remot": 0, "http": [0, 2, 4], "com": [0, 2], "jaimepsanto": [0, 2], "checkout": 0, "main": 0, "follow": 0, "rebas": 0, "should": [0, 6], "done": [0, 6], "somewhat": 0, "regularli": 0, "ensur": 0, "date": 0, "most": 0, "recent": 0, "": [0, 2, 4], "case": [0, 4, 6], "haven": 0, "t": [0, 6], "yet": [0, 2], "e": [0, 1, 2, 6], "us": [0, 1, 2, 4, 5, 6], "edit": 0, "mode": 0, "sync": 0, "branch": 0, "reflect": 0, "newest": 0, "creat": [0, 1, 2, 4], "new": [0, 4], "instead": [0, 4], "b": [0, 6], "new_branch_nam": 0, "If": [0, 2, 4, 6], "re": [0, 2], "build": [0, 4], "python": [0, 1, 2], "m": [0, 2], "upgrad": 0, "might": [0, 2, 4], "need": [0, 2, 4, 6], "futur": [0, 4], "doc": 0, "accordingli": 0, "doe": [0, 4, 6], "break": 0, "exist": [0, 4], "run": [0, 2, 4], "command": 0, "insid": 0, "folder": [0, 2], "v": [0, 2], "all": [0, 4, 6], "successful": 0, "file": 0, "place": [0, 4, 5, 6], "aggress": 0, "max": 0, "line": [0, 6], "length": 0, "72": 0, "path_to_fil": 0, "Or": [0, 2], "altern": [0, 1], "an": [0, 1, 4], "entir": [0, 4], "recurs": 0, "path_to_fold": 0, "In": [0, 4, 6], "bump": 0, "patch": 0, "commit": 0, "am": 0, "messag": [0, 4], "sure": 0, "write": 0, "short": 0, "descript": 0, "easili": [0, 6], "identifi": 0, "push": 0, "u": 0, "origin": 0, "name": [0, 4], "visit": 0, "ve": 0, "ad": 0, "featur": 0, "want": 0, "directli": [0, 4], "sphinx": 0, "autom": 0, "process": 0, "page": [0, 1], "via": [0, 2, 6], "sphinx_autodoc_typehint": 0, "sphinx_copybutton": 0, "sphinxcontrib": 0, "programoutput": 0, "myst_pars": 0, "furo": 0, "On": 0, "linux": [0, 2], "apt": 0, "get": [0, 4, 6], "python3": [0, 2], "window": 0, "conda": [0, 2], "manual": 0, "depend": [0, 2, 4], "taken": 0, "care": 0, "basic": [0, 2], "probabl": [0, 4, 6], "alreadi": 0, "present": 0, "just": [0, 6], "skip": 0, "quickstart": 0, "from": [0, 4, 6], "navig": [0, 2], "cd": [0, 2], "core": [0, 2], "autodoc": 0, "compil": 0, "apidoc": 0, "f": [0, 6], "o": 0, "sourc": [0, 2, 4, 6], "modul": [0, 3], "clean": 0, "previou": 0, "html": 0, "content": [0, 3], "linuxgit": 0, "pr": 0, "describ": [0, 2, 4], "abov": [0, 2], "twine": 0, "upload": 0, "dist": 0, "object": [1, 4], "orient": 1, "packag": [1, 2, 3], "realiz": 1, "continu": [1, 4], "With": [1, 6], "have": [1, 4, 6], "abil": 1, "perform": [1, 4], "both": [1, 6], "unitari": [1, 4], "pure": 1, "well": 1, "introduc": 1, "classic": [1, 4], "effect": 1, "stochasticqwak": 1, "addition": 1, "graphic": 1, "interfac": 1, "provid": [1, 4], "friendli": 1, "where": [1, 4, 5, 6], "possibl": [1, 6], "studi": 1, "sever": 1, "differ": [1, 6], "aspect": 1, "without": [1, 6], "prior": 1, "knowledg": 1, "see": [1, 6], "more": [1, 4], "inform": 1, "fullstack": [1, 2], "web": [1, 2], "app": [1, 2], "avail": 1, "heroku": 1, "built": 1, "flask": 1, "pymongo": 1, "The": [1, 2, 4, 6], "server": 1, "gener": [1, 4, 5, 6], "session": 1, "each": [1, 4, 6], "databas": 1, "collect": 1, "made": [1, 2], "static": [1, 4], "dynam": [1, 4], "json": [1, 4], "which": [1, 4, 6], "convert": [1, 4], "class": [1, 2, 4, 5], "instanc": [1, 4], "financ": 1, "nation": 1, "through": [1, 2, 4, 6], "portugues": 1, "agenc": 1, "fct": 1, "funda\u00e7\u00e3o": 1, "para": 1, "ci\u00eancia": 1, "tecnologia": 1, "within": 1, "uidb": 1, "50014": 1, "2020": 1, "local": 1, "anaconda": 1, "recommend": 1, "venv": 1, "usag": 1, "contribut": 1, "set": [1, 4, 6], "up": [1, 2], "repo": 1, "make": [1, 4], "your": [1, 4], "chang": [1, 2, 4, 6], "document": 1, "updat": [1, 4], "pypi": [1, 2], "util": 1, "host": 2, "pipi": 2, "prefer": 2, "virtual": 2, "environ": 2, "clone": 2, "download": 2, "n": [2, 4, 6], "name_of_env": 2, "activ": 2, "numpi": [2, 4, 6], "scipi": [2, 4], "sympi": [2, 6], "matplotlib": [2, 4], "networkx": [2, 4, 5], "qutip": [2, 4], "And": 2, "interest": 2, "gui": 2, "also": [2, 4, 5, 6], "eel": 2, "met": 2, "onli": [2, 4, 6], "directori": 2, "path": [2, 6], "sim": 2, "develop": 2, "purpos": 2, "do": [2, 4, 6], "wa": [2, 4], "migrat": 2, "were": 2, "graphicalqwak": 2, "For": [2, 6], "reason": 2, "temporarili": 2, "unavail": 2, "option": [2, 4, 6], "shortcut": 2, "execut": [2, 4], "simpli": 2, "ln": 2, "qwakenv": 2, "bin": 2, "Then": [2, 6], "itself": [2, 4], "script": 2, "installcheck": 2, "py": 2, "error": 2, "thrown": 2, "end": [2, 4, 6], "plot": [2, 4, 6], "success": 2, "howev": 2, "submodul": 3, "perfectstatetransf": 3, "isstrcospec": [3, 6], "issimplepol": [3, 6], "sieveeratosthen": [3, 6], "getsquarefre": [3, 6], "geteigensupp": [3, 6], "checkroot": [3, 6], "swapnod": [3, 6], "geteigenv": [3, 6], "jsontool": 3, "complex_to_json": [3, 6], "complex_matrix_to_json": [3, 6], "json_to_complex": [3, 6], "json_matrix_to_complex": [3, 6], "convert_cytoscape_to_decim": [3, 6], "plottool": 3, "plot_qwak": [3, 6], "plot_qwak_heatmap": [3, 6], "except": [4, 6], "error_nam": 4, "detail": 4, "base": 4, "baseexcept": 4, "custom": 4, "applic": 4, "str": [4, 6], "about": 4, "as_str": 4, "return": [4, 6], "string": [4, 6], "represent": 4, "type": [4, 5, 6], "paramet": [4, 6], "stateoutofbound": 4, "rais": 4, "out": 4, "expect": 4, "bound": 4, "initi": [4, 5], "inherit": 4, "none": [4, 5, 6], "nonunitaryst": 4, "undefinedtimelist": 4, "interv": [4, 6], "multipl": [4, 6], "walk": 4, "undefin": 4, "emptyprobdistlist": 4, "distribut": 4, "list": [4, 5, 6], "empti": 4, "missingnodeinput": 4, "input": 4, "node": 4, "missinggraphinput": 4, "graph": [4, 5, 6], "staticn": 4, "dynamicn": 4, "staticgraph": 4, "dynamicgraph": 4, "staticstatelist": 4, "dynamicstatelist": 4, "statictim": 4, "dynamictimelist": 4, "staticgamma": 4, "dynamicgamma": 4, "qwakid": 4, "undefinedus": 4, "_summary_": [4, 6], "int": [4, 6], "_description_": [4, 6], "nx": [4, 5], "float": [4, 6], "to_json": 4, "classmethod": 4, "from_json": 4, "json_var": 4, "json_str": 4, "dict": 4, "getqwakid": 4, "setqwakid": 4, "newid": 4, "setstaticqwak": 4, "newstaticqwak": 4, "getstaticqwak": 4, "setdynamicqwak": 4, "newdynamicqwak": 4, "setdynamictimelist": 4, "newtimelist": 4, "getstaticwalk": 4, "runwalk": [4, 5], "_type_": [4, 6], "runmultiplewalk": 4, "setstaticdim": 4, "newdim": 4, "graphstr": 4, "initstatelist": 4, "default": [4, 5, 6], "setdynamicdim": 4, "getstaticdim": 4, "getdynamicdim": 4, "setstaticgraph": 4, "newgraphstr": 4, "setdynamicgraph": 4, "setstaticcustomgraph": 4, "customadjac": 4, "setdynamiccustomgraph": 4, "getstaticgraph": 4, "getdynamicgraph": 4, "getstaticgraphtojson": 4, "getdynamicgraphtojson": 4, "getstaticadjacencymatrix": 4, "getdynamicadjacencymatrix": 4, "setstatictim": 4, "newtim": 4, "getstatictim": 4, "setdynamictim": 4, "getdynamictim": 4, "setdynamicinitstatelist": 4, "newinitstatelist": 4, "setstaticinitst": 4, "initstatestr": 4, "getstaticinitst": 4, "getdynamicinitstatelist": 4, "getstaticprobdist": 4, "setstaticprobdist": 4, "newstaticprobdist": 4, "getdynamicprobdistlist": 4, "setdynamicprobdistlist": 4, "newdynamicprobdistlist": 4, "getdynamicwalklist": 4, "setdynamicwalklist": 4, "newwalklist": 4, "getstaticprobvec": 4, "getdynamicprobveclist": 4, "getstaticmean": 4, "getdynamicmean": 4, "getstaticsndmo": 4, "getdynamicsndmo": 4, "getstaticstdev": 4, "getdynamicstdev": 4, "getstaticsurvivalprob": 4, "k0": 4, "k1": 4, "getdynamicsurvivalprob": 4, "getstaticinversepartratio": 4, "getdynamicinvpartratio": 4, "checkpst": 4, "nodea": [4, 6], "nodeb": [4, 6], "gamma": 4, "1": [4, 5, 6], "0": [4, 5], "laplacian": [4, 5], "fals": [4, 5, 6], "markedel": 4, "quantum": [4, 5], "dimens": [4, 5], "adjac": [4, 5], "matrix": [4, 5, 6], "central": 4, "structur": 4, "regular": 4, "note": [4, 6], "softwar": 4, "support": [4, 6], "undirect": 4, "hopefulli": 4, "eigenvalu": [4, 6], "eigenvector": [4, 6], "calcul": 4, "dure": 4, "diagon": 4, "spectral": 4, "decomposit": [4, 6], "chosen": 4, "method": [4, 5], "sinc": 4, "computation": 4, "cheaper": 4, "than": [4, 6], "expon": 4, "complet": 4, "bool": [4, 5, 6], "choos": [4, 5, 6], "whether": [4, 5, 6], "simpl": [4, 5, 6], "mark": 4, "element": 4, "search": 4, "builddiagonaloper": 4, "transit": [4, 5], "rate": [4, 5], "defin": [4, 5, 6], "take": [4, 5], "entri": [4, 6], "multipli": 4, "last": [4, 6], "complex": 4, "conjug": 4, "round": [4, 6], "buildexpmoper": 4, "function": [4, 6], "expm": 4, "exponenti": 4, "_buildhamiltonian": 4, "hamiltonian": 4, "either": 4, "ndarrai": [4, 6], "_buildsearchhamiltonian": 4, "_buildeigenvalu": 4, "ishermitian": 4, "check": [4, 6], "hermitian": 4, "_hermitiantest": 4, "np": 4, "true": [4, 6], "otherwis": [4, 6], "geteigenvalu": 4, "_seteigenvalu": 4, "geteigenvector": 4, "_seteigenvector": 4, "gethamiltonian": 4, "sethamiltonian": 4, "resetoper": 4, "reset": 4, "setdim": 4, "current": 4, "one": [4, 6], "getdim": 4, "settim": 4, "gettim": 4, "setadjacencymatrix": 4, "adjacencymatrix": 4, "sens": 4, "control": 4, "over": 4, "them": [4, 6], "_setadjacencymatrixonli": 4, "getadjacencymatrix": 4, "_setoperatorvec": 4, "newoper": 4, "ones": 4, "setoper": 4, "getoper": 4, "associ": [4, 6], "algorithm": [4, 6], "pst": [4, 6], "articl": 4, "arxiv": 4, "org": 4, "ab": 4, "1606": 4, "02264": 4, "author": 4, "rodrigo": 4, "chave": 4, "condit": [4, 6], "valu": [4, 5, 6], "output": 4, "getmarkedel": 4, "setmarkedel": 4, "rtype": 4, "_degreediagonalmatrix": 4, "g": [4, 6], "vector": [4, 5, 6], "load": 4, "contain": 4, "full": [4, 5], "zero": [4, 6], "obtain": 4, "resetprobdist": 4, "buildprobdist": 4, "amplitud": 4, "its": [4, 6], "setprobdist": 4, "newprobdist": 4, "getstatevec": 4, "getstat": 4, "setstat": 4, "newstat": 4, "setprobvec": 4, "newprobvec": 4, "getprobvec": 4, "arrai": 4, "moment": 4, "k": [4, 6], "kth": 4, "invpartratio": 4, "invers": 4, "particip": 4, "ratio": 4, "stdev": 4, "standard": 4, "deviat": 4, "survivalprob": 4, "fromnod": 4, "tonod": 4, "surviv": 4, "start": [4, 6], "searchnodeprob": 4, "searchnod": 4, "given": [4, 6], "union": 4, "dictionari": [4, 6], "final": 4, "evolut": 4, "variabl": 4, "basi": 4, "evolv": 4, "buildwalk": [4, 5], "initst": 4, "resetwalk": 4, "compon": 4, "setinitst": 4, "newinitst": 4, "getinitst": 4, "setwalk": 4, "newwalk": 4, "getfinalst": 4, "setfinalst": 4, "newfinalst": 4, "finalst": 4, "getampvec": 4, "searchnodeamplitud": 4, "transporteffici": 4, "transport": 4, "effici": 4, "serial": 4, "deseri": 4, "nodelist": 4, "customstatelist": 4, "mandatori": 4, "statelist": 4, "intern": 4, "statevec": 4, "repres": 4, "column": [4, 5, 6], "desir": 4, "what": [4, 6], "uniform": 4, "superposit": 4, "buildstat": 4, "balanc": 4, "_checkstateoutofbound": 4, "system": 4, "_checkunitarystatelist": 4, "sum": [4, 6], "squar": [4, 6], "non": 4, "herm": 4, "inv": 4, "resetst": 4, "newnodelist": 4, "setnodelist": 4, "getnodelist": 4, "setstatevec": 4, "newvec": 4, "contrast": 4, "decor": 4, "becaus": 4, "call": 4, "mean": 4, "access": 4, "specif": 4, "cannot": 4, "rather": 4, "necessari": 4, "noiseparam": 4, "sinknod": 4, "sinkrat": 4, "stochast": 4, "walker": 4, "lindblad": 4, "equat": 4, "theoret": 4, "model": 4, "whitfield": 4, "j": 4, "d": [4, 6], "et": 4, "al": 4, "random": [4, 5], "lorenzo": 4, "buffoni": 4, "space": 4, "nois": 4, "mix": 4, "fulli": 4, "index": [4, 6], "sink": 4, "indic": 4, "transfer": 4, "buildstochasticoper": 4, "other": [4, 6], "_buildlaplacian": 4, "_buildquantumhamiltonian": 4, "_buildclassicalhamiltonian": 4, "getclassicalhamiltonian": 4, "qobj": 4, "setclassicalhamiltonian": 4, "newclassicalhamiltonian": 4, "getquantumhamiltonian": 4, "setquantumhamiltonian": 4, "newquantumhamiltonian": 4, "setsinknod": 4, "newsinknod": 4, "getsinknod": 4, "getlaplacian": 4, "flatten": 4, "observ": 4, "opt": 4, "solver": 4, "construct": 4, "specifi": 4, "frame": 4, "simul": 4, "monitor": 4, "store": [4, 6], "integr": 4, "includ": 4, "act": 4, "durat": 4, "getprobdist": 4, "retriev": [4, 5], "govern": 4, "timelist": 4, "userundef": 4, "data": [4, 6], "combin": 4, "three": 4, "achiev": 4, "staticquantumwalk": 4, "These": 4, "transform": 4, "suitabl": 4, "choic": 4, "respect": [4, 5], "must": [4, 5, 6], "result": [4, 5], "init": 4, "id": 4, "stoberr": 4, "nuerr": 4, "runexpmwalk": 4, "runmultipleexpmwalk": 4, "evalu": 4, "setgraph": 4, "newgraph": 4, "recalcul": 4, "getgraph": 4, "setcustomgraph": 4, "customadjmatrix": 4, "settimelist": 4, "gettimelist": 4, "newadjmatrix": 4, "newhamiltonian": 4, "remov": [4, 6], "getwalk": 4, "getprobdistlist": 4, "setprobdistlist": 4, "newprobdistlist": 4, "getprobveclist": 4, "getmean": 4, "resultround": 4, "getmeanlist": 4, "getsndmoment": 4, "second": [4, 6], "getstdev": 4, "getstdevlist": 4, "getinversepartratio": 4, "getinversepartratiolist": 4, "getsurvivalprob": 4, "miss": 4, "getsurvivalproblist": 4, "between": [4, 6], "certain": 4, "checkpst_sympi": 4, "gettransporteffici": 4, "getqwak": 4, "setqwak": 4, "newqwak": 4, "isdynam": 4, "probdistlist": 4, "walklist": 4, "To": 5, "ingredi": 5, "markedsearch": 5, "state": 5, "arg": 5, "param": 5, "obei": 6, "numer": 6, "rule": 6, "vertic": 6, "strongli": 6, "cospectr": 6, "two": 6, "strong": 6, "characterist": 6, "polynomi": 6, "ma": 6, "colum": 6, "row": 6, "equal": 6, "mb": 6, "strcospec": 6, "phi": 6, "phiab": 6, "pole": 6, "trickier": 6, "defn": 6, "x": 6, "gcd": 6, "repeat": 6, "root": 6, "occur": 6, "constant": 6, "coeefici": 6, "simplepol": 6, "One": 6, "find": 6, "free": 6, "number": 6, "prime": 6, "being": 6, "uniqu": 6, "fist": 6, "siev": 6, "eratosthen": 6, "correspond": 6, "It": 6, "2": 6, "next": 6, "same": 6, "procedur": 6, "At": 6, "posit": 6, "squarefre": 6, "similar": 6, "wai": 6, "found": 6, "loop": 6, "integ": 6, "eigenvec": 6, "eigenv": 6, "vertex": 6, "r": 6, "appli": 6, "th": 6, "quadrat": 6, "p": 6, "qr": 6, "sqrt": 6, "delta": 6, "frist": 6, "h": 6, "phia": 6, "degre": 6, "crucial": 6, "4": 6, "put": 6, "direct": 6, "satisfi": 6, "introot": 6, "know": 6, "coeffici": 6, "bigest": 6, "power": 6, "until": 6, "bigger": 6, "tr": 6, "a\u00b2": 6, "quadroot": 6, "our": 6, "pi": 6, "theta0": 6, "thetar": 6, "biggest": 6, "z": 6, "complex_matrix": 6, "dct": 6, "json_matrix": 6, "graph_data": 6, "x_value_matrix": 6, "y_value_matrix": 6, "x_label": 6, "y_label": 6, "plot_titl": 6, "legend_label": 6, "legend_titl": 6, "legend_ncol": 6, "3": 6, "legend_loc": 6, "best": 6, "save_path": 6, "font_siz": 6, "12": 6, "figsiz": 6, "10": 6, "6": 6, "color_list": 6, "line_style_list": 6, "use_loglog": 6, "use_cbar": 6, "cbar_label": 6, "cbar_ticks_gener": 6, "cbar_num_tick": 6, "cbar_tick_label": 6, "c": 6, "x_num_tick": 6, "y_num_tick": 6, "x_round_val": 6, "y_round_val": 6, "v_line_valu": 6, "v_line_styl": 6, "v_line_list_index": 6, "v_line_color": 6, "x_lim": 6, "kwarg": 6, "y": 6, "pass": 6, "syntax": 6, "array_lik": 6, "singl": 6, "label": 6, "axi": 6, "titl": 6, "legend": 6, "locat": 6, "save": 6, "font": 6, "size": 6, "tupl": 6, "figur": 6, "color": 6, "log": 6, "colorbar": 6, "tick": 6, "decim": 6, "limit": 6, "p_valu": 6, "t_valu": 6, "prob_valu": 6, "5": 6, "filepath": 6, "xlabel": 6, "ylabel": 6, "cmap": 6, "coolwarm": 6, "x_vline_valu": 6, "y_hline_valu": 6, "heatmap": 6, "sampl": 6, "colormap": 6, "draw": 6, "horizont": 6}, "objects": {"": [[5, 0, 1, "", "QWAK"], [4, 1, 0, "-", "qwak"], [6, 1, 0, "-", "utils"]], "qwak": [[4, 1, 0, "-", "Errors"], [4, 1, 0, "-", "GraphicalQWAK"], [4, 1, 0, "-", "Operator"], [4, 1, 0, "-", "ProbabilityDistribution"], [4, 1, 0, "-", "QuantumWalk"], [4, 1, 0, "-", "State"], [4, 1, 0, "-", "StochasticOperator"], [4, 1, 0, "-", "StochasticProbabilityDistribution"], [4, 1, 0, "-", "StochasticQuantumWalk"], [4, 1, 0, "-", "StochasticQwak"], [4, 1, 0, "-", "qwak"]], "qwak.Errors": [[4, 2, 1, "", "EmptyProbDistList"], [4, 2, 1, "", "Error"], [4, 2, 1, "", "MissingGraphInput"], [4, 2, 1, "", "MissingNodeInput"], [4, 2, 1, "", "NonUnitaryState"], [4, 2, 1, "", "StateOutOfBounds"], [4, 2, 1, "", "UndefinedTimeList"]], "qwak.Errors.Error": [[4, 3, 1, "", "as_string"]], "qwak.GraphicalQWAK": [[4, 0, 1, "", "GraphicalQWAK"]], "qwak.GraphicalQWAK.GraphicalQWAK": [[4, 3, 1, "", "checkPST"], [4, 3, 1, "", "from_json"], [4, 3, 1, "", "getDynamicAdjacencyMatrix"], [4, 3, 1, "", "getDynamicDim"], [4, 3, 1, "", "getDynamicGraph"], [4, 3, 1, "", "getDynamicGraphToJson"], [4, 3, 1, "", "getDynamicInitStateList"], [4, 3, 1, "", "getDynamicInvPartRatio"], [4, 3, 1, "", "getDynamicMean"], [4, 3, 1, "", "getDynamicProbDistList"], [4, 3, 1, "", "getDynamicProbVecList"], [4, 3, 1, "", "getDynamicSndMoment"], [4, 3, 1, "", "getDynamicStDev"], [4, 3, 1, "", "getDynamicSurvivalProb"], [4, 3, 1, "", "getDynamicTime"], [4, 3, 1, "", "getDynamicWalkList"], [4, 3, 1, "", "getQwakId"], [4, 3, 1, "", "getStaticAdjacencyMatrix"], [4, 3, 1, "", "getStaticDim"], [4, 3, 1, "", "getStaticGraph"], [4, 3, 1, "", "getStaticGraphToJson"], [4, 3, 1, "", "getStaticInitState"], [4, 3, 1, "", "getStaticInversePartRatio"], [4, 3, 1, "", "getStaticMean"], [4, 3, 1, "", "getStaticProbDist"], [4, 3, 1, "", "getStaticProbVec"], [4, 3, 1, "", "getStaticQWAK"], [4, 3, 1, "", "getStaticSndMoment"], [4, 3, 1, "", "getStaticStDev"], [4, 3, 1, "", "getStaticSurvivalProb"], [4, 3, 1, "", "getStaticTime"], [4, 3, 1, "", "getStaticWalk"], [4, 3, 1, "", "runMultipleWalks"], [4, 3, 1, "", "runWalk"], [4, 3, 1, "", "setDynamicCustomGraph"], [4, 3, 1, "", "setDynamicDim"], [4, 3, 1, "", "setDynamicGraph"], [4, 3, 1, "", "setDynamicInitStateList"], [4, 3, 1, "", "setDynamicProbDistList"], [4, 3, 1, "", "setDynamicQWAK"], [4, 3, 1, "", "setDynamicTime"], [4, 3, 1, "", "setDynamicTimeList"], [4, 3, 1, "", "setDynamicWalkList"], [4, 3, 1, "", "setQwakId"], [4, 3, 1, "", "setStaticCustomGraph"], [4, 3, 1, "", "setStaticDim"], [4, 3, 1, "", "setStaticGraph"], [4, 3, 1, "", "setStaticInitState"], [4, 3, 1, "", "setStaticProbDist"], [4, 3, 1, "", "setStaticQWAK"], [4, 3, 1, "", "setStaticTime"], [4, 3, 1, "", "to_json"]], "qwak.Operator": [[4, 0, 1, "", "Operator"]], "qwak.Operator.Operator": [[4, 3, 1, "", "_buildEigenValues"], [4, 3, 1, "", "_buildHamiltonian"], [4, 3, 1, "", "_buildSearchHamiltonian"], [4, 3, 1, "", "_degreeDiagonalMatrix"], [4, 3, 1, "", "_hermitianTest"], [4, 3, 1, "", "_setAdjacencyMatrixOnly"], [4, 3, 1, "", "_setEigenValues"], [4, 3, 1, "", "_setEigenVectors"], [4, 3, 1, "", "_setOperatorVec"], [4, 3, 1, "", "buildDiagonalOperator"], [4, 3, 1, "", "buildExpmOperator"], [4, 3, 1, "", "checkPST"], [4, 3, 1, "", "from_json"], [4, 3, 1, "", "getAdjacencyMatrix"], [4, 3, 1, "", "getDim"], [4, 3, 1, "", "getEigenValues"], [4, 3, 1, "", "getEigenVectors"], [4, 3, 1, "", "getHamiltonian"], [4, 3, 1, "", "getMarkedElements"], [4, 3, 1, "", "getOperator"], [4, 3, 1, "", "getTime"], [4, 3, 1, "", "resetOperator"], [4, 3, 1, "", "setAdjacencyMatrix"], [4, 3, 1, "", "setDim"], [4, 3, 1, "", "setHamiltonian"], [4, 3, 1, "", "setMarkedElements"], [4, 3, 1, "", "setOperator"], [4, 3, 1, "", "setTime"], [4, 3, 1, "", "to_json"]], "qwak.ProbabilityDistribution": [[4, 0, 1, "", "ProbabilityDistribution"]], "qwak.ProbabilityDistribution.ProbabilityDistribution": [[4, 3, 1, "", "buildProbDist"], [4, 3, 1, "", "from_json"], [4, 3, 1, "", "getDim"], [4, 3, 1, "", "getProbVec"], [4, 3, 1, "", "getState"], [4, 3, 1, "", "getStateVec"], [4, 3, 1, "", "invPartRatio"], [4, 3, 1, "", "moment"], [4, 3, 1, "", "resetProbDist"], [4, 3, 1, "", "searchNodeProbability"], [4, 3, 1, "", "setDim"], [4, 3, 1, "", "setProbDist"], [4, 3, 1, "", "setProbVec"], [4, 3, 1, "", "setState"], [4, 3, 1, "", "stDev"], [4, 3, 1, "", "survivalProb"], [4, 3, 1, "", "to_json"]], "qwak.QuantumWalk": [[4, 0, 1, "", "QuantumWalk"]], "qwak.QuantumWalk.QuantumWalk": [[4, 3, 1, "", "buildWalk"], [4, 3, 1, "", "from_json"], [4, 3, 1, "", "getAmpVec"], [4, 3, 1, "", "getDim"], [4, 3, 1, "", "getFinalState"], [4, 3, 1, "", "getInitState"], [4, 3, 1, "", "getOperator"], [4, 3, 1, "", "resetWalk"], [4, 3, 1, "", "searchNodeAmplitude"], [4, 3, 1, "", "setDim"], [4, 3, 1, "", "setFinalState"], [4, 3, 1, "", "setInitState"], [4, 3, 1, "", "setOperator"], [4, 3, 1, "", "setWalk"], [4, 3, 1, "", "to_json"], [4, 3, 1, "", "transportEfficiency"]], "qwak.State": [[4, 0, 1, "", "State"]], "qwak.State.State": [[4, 3, 1, "", "_checkStateOutOfBounds"], [4, 3, 1, "", "_checkUnitaryStateList"], [4, 3, 1, "", "buildState"], [4, 3, 1, "", "from_json"], [4, 3, 1, "", "getDim"], [4, 3, 1, "", "getNodeList"], [4, 3, 1, "", "getStateVec"], [4, 3, 1, "", "herm"], [4, 3, 1, "", "inv"], [4, 3, 1, "", "resetState"], [4, 3, 1, "", "setDim"], [4, 3, 1, "", "setNodeList"], [4, 3, 1, "", "setState"], [4, 3, 1, "", "setStateVec"], [4, 3, 1, "", "to_json"]], "qwak.StochasticOperator": [[4, 0, 1, "", "StochasticOperator"]], "qwak.StochasticOperator.StochasticOperator": [[4, 3, 1, "", "_buildClassicalHamiltonian"], [4, 3, 1, "", "_buildLaplacian"], [4, 3, 1, "", "_buildQuantumHamiltonian"], [4, 3, 1, "", "buildStochasticOperator"], [4, 3, 1, "", "getClassicalHamiltonian"], [4, 3, 1, "", "getLaplacian"], [4, 3, 1, "", "getQuantumHamiltonian"], [4, 3, 1, "", "getSinkNode"], [4, 3, 1, "", "setClassicalHamiltonian"], [4, 3, 1, "", "setQuantumHamiltonian"], [4, 3, 1, "", "setSinkNode"]], "qwak.StochasticProbabilityDistribution": [[4, 0, 1, "", "StochasticProbabilityDistribution"]], "qwak.StochasticProbabilityDistribution.StochasticProbabilityDistribution": [[4, 3, 1, "", "buildProbDist"], [4, 3, 1, "", "getProbVec"], [4, 3, 1, "", "setProbVec"]], "qwak.StochasticQuantumWalk": [[4, 0, 1, "", "StochasticQuantumWalk"]], "qwak.StochasticQuantumWalk.StochasticQuantumWalk": [[4, 3, 1, "", "buildWalk"], [4, 3, 1, "", "getDim"], [4, 3, 1, "", "getFinalState"], [4, 3, 1, "", "setFinalState"]], "qwak.StochasticQwak": [[4, 0, 1, "", "StochasticQWAK"]], "qwak.StochasticQwak.StochasticQWAK": [[4, 3, 1, "", "getClassicalHamiltonian"], [4, 3, 1, "", "getLaplacian"], [4, 3, 1, "", "getProbDist"], [4, 3, 1, "", "getProbVec"], [4, 3, 1, "", "getQuantumHamiltonian"], [4, 3, 1, "", "runWalk"], [4, 3, 1, "", "setProbDist"]], "qwak.qwak": [[4, 0, 1, "", "QWAK"]], "qwak.qwak.QWAK": [[4, 3, 1, "", "checkPST"], [4, 3, 1, "", "checkPST_sympy"], [4, 3, 1, "", "from_json"], [4, 3, 1, "", "getAdjacencyMatrix"], [4, 3, 1, "", "getAmpVec"], [4, 3, 1, "", "getDim"], [4, 3, 1, "", "getFinalState"], [4, 3, 1, "", "getGraph"], [4, 3, 1, "", "getHamiltonian"], [4, 3, 1, "", "getInitState"], [4, 3, 1, "", "getInversePartRatio"], [4, 3, 1, "", "getInversePartRatioList"], [4, 3, 1, "", "getMarkedElements"], [4, 3, 1, "", "getMean"], [4, 3, 1, "", "getMeanList"], [4, 3, 1, "", "getOperator"], [4, 3, 1, "", "getProbDist"], [4, 3, 1, "", "getProbDistList"], [4, 3, 1, "", "getProbVec"], [4, 3, 1, "", "getProbVecList"], [4, 3, 1, "", "getQWAK"], [4, 3, 1, "", "getQWAKId"], [4, 3, 1, "", "getSndMoment"], [4, 3, 1, "", "getStDev"], [4, 3, 1, "", "getStDevList"], [4, 3, 1, "", "getSurvivalProb"], [4, 3, 1, "", "getSurvivalProbList"], [4, 3, 1, "", "getTime"], [4, 3, 1, "", "getTimeList"], [4, 3, 1, "", "getTransportEfficiency"], [4, 3, 1, "", "getWalk"], [4, 3, 1, "", "resetWalk"], [4, 3, 1, "", "runExpmWalk"], [4, 3, 1, "", "runMultipleExpmWalks"], [4, 3, 1, "", "runMultipleWalks"], [4, 3, 1, "", "runWalk"], [4, 3, 1, "", "searchNodeAmplitude"], [4, 3, 1, "", "searchNodeProbability"], [4, 3, 1, "", "setAdjacencyMatrix"], [4, 3, 1, "", "setCustomGraph"], [4, 3, 1, "", "setDim"], [4, 3, 1, "", "setGraph"], [4, 3, 1, "", "setHamiltonian"], [4, 3, 1, "", "setInitState"], [4, 3, 1, "", "setMarkedElements"], [4, 3, 1, "", "setOperator"], [4, 3, 1, "", "setProbDist"], [4, 3, 1, "", "setProbDistList"], [4, 3, 1, "", "setQWAK"], [4, 3, 1, "", "setTime"], [4, 3, 1, "", "setTimeList"], [4, 3, 1, "", "setWalk"], [4, 3, 1, "", "to_json"]], "utils": [[6, 1, 0, "-", "PerfectStateTransfer"], [6, 1, 0, "-", "jsonTools"], [6, 1, 0, "-", "plotTools"]], "utils.PerfectStateTransfer": [[6, 4, 1, "", "checkRoots"], [6, 4, 1, "", "getEigenSupp"], [6, 4, 1, "", "getEigenVal"], [6, 4, 1, "", "getSquareFree"], [6, 4, 1, "", "isSimplePoles"], [6, 4, 1, "", "isStrCospec"], [6, 4, 1, "", "sieveEratosthenes"], [6, 4, 1, "", "swapNodes"]], "utils.jsonTools": [[6, 4, 1, "", "complex_matrix_to_json"], [6, 4, 1, "", "complex_to_json"], [6, 4, 1, "", "convert_cytoscape_to_decimal"], [6, 4, 1, "", "json_matrix_to_complex"], [6, 4, 1, "", "json_to_complex"]], "utils.plotTools": [[6, 4, 1, "", "plot_qwak"], [6, 4, 1, "", "plot_qwak_heatmap"]]}, "objtypes": {"0": "py:class", "1": "py:module", "2": "py:exception", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "module", "Python module"], "2": ["py", "exception", "Python exception"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"contribut": 0, "set": 0, "up": 0, "repo": 0, "make": 0, "your": 0, "chang": 0, "gener": 0, "document": 0, "updat": 0, "pypi": 0, "packag": [0, 4, 6], "qwak": [1, 2, 4], "quantum": 1, "walk": [1, 5], "analysi": 1, "kit": 1, "galleri": 1, "fund": 1, "content": [1, 4, 6], "instal": 2, "local": 2, "anaconda": 2, "recommend": 2, "venv": 2, "test": 2, "util": [3, 6], "submodul": [4, 6], "error": 4, "modul": [4, 6], "attribut": 4, "graphicalqwak": 4, "oper": 4, "probabilitydistribut": 4, "quantumwalk": 4, "state": 4, "stochasticoper": 4, "stochasticprobabilitydistribut": 4, "stochasticquantumwalk": 4, "stochasticqwak": 4, "usag": 5, "creat": 5, "perfectstatetransf": 6, "jsontool": 6, "plottool": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[0, "contributing"]], "Setting up the repo for contributing": [[0, "setting-up-the-repo-for-contributing"]], "Making your changes": [[0, "making-your-changes"]], "Generating Documentation": [[0, "generating-documentation"]], "Updating PyPi package": [[0, "updating-pypi-package"]], "QWAK - Quantum Walk Analysis Kit": [[1, "qwak-quantum-walk-analysis-kit"]], "Gallery": [[1, "gallery"]], "Funding": [[1, "funding"]], "Contents": [[1, "contents"]], "Installation": [[2, "installation"]], "Installing QWAK locally with Anaconda (recommended)": [[2, "installing-qwak-locally-with-anaconda-recommended"]], "Installing QWAK locally with Venv": [[2, "installing-qwak-locally-with-venv"]], "Testing the installation": [[2, "testing-the-installation"]], "utils": [[3, "utils"]], "qwak package": [[4, "qwak-package"]], "Submodules": [[4, "submodules"], [6, "submodules"]], "qwak.Errors module": [[4, "module-qwak.Errors"]], "Attributes:": [[4, "attributes"]], "qwak.GraphicalQWAK module": [[4, "module-qwak.GraphicalQWAK"]], "qwak.Operator module": [[4, "module-qwak.Operator"]], "qwak.ProbabilityDistribution module": [[4, "module-qwak.ProbabilityDistribution"]], "qwak.QuantumWalk module": [[4, "module-qwak.QuantumWalk"]], "qwak.State module": [[4, "module-qwak.State"]], "qwak.StochasticOperator module": [[4, "module-qwak.StochasticOperator"]], "qwak.StochasticProbabilityDistribution module": [[4, "module-qwak.StochasticProbabilityDistribution"]], "qwak.StochasticQuantumWalk module": [[4, "module-qwak.StochasticQuantumWalk"]], "qwak.StochasticQwak module": [[4, "module-qwak.StochasticQwak"]], "qwak.qwak module": [[4, "module-qwak.qwak"]], "Module contents": [[4, "module-qwak"], [6, "module-utils"]], "Usage": [[5, "usage"]], "Creating Walks": [[5, "creating-walks"]], "utils package": [[6, "utils-package"]], "utils.PerfectStateTransfer module": [[6, "module-utils.PerfectStateTransfer"]], "utils.jsonTools module": [[6, "module-utils.jsonTools"]], "utils.plotTools module": [[6, "module-utils.plotTools"]]}, "indexentries": {"emptyprobdistlist": [[4, "qwak.Errors.EmptyProbDistList"]], "error": [[4, "qwak.Errors.Error"]], "graphicalqwak (class in qwak.graphicalqwak)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK"]], "missinggraphinput": [[4, "qwak.Errors.MissingGraphInput"]], "missingnodeinput": [[4, "qwak.Errors.MissingNodeInput"]], "nonunitarystate": [[4, "qwak.Errors.NonUnitaryState"]], "operator (class in qwak.operator)": [[4, "qwak.Operator.Operator"]], "probabilitydistribution (class in qwak.probabilitydistribution)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution"]], "qwak (class in qwak.qwak)": [[4, "qwak.qwak.QWAK"]], "quantumwalk (class in qwak.quantumwalk)": [[4, "qwak.QuantumWalk.QuantumWalk"]], "state (class in qwak.state)": [[4, "qwak.State.State"]], "stateoutofbounds": [[4, "qwak.Errors.StateOutOfBounds"]], "stochasticoperator (class in qwak.stochasticoperator)": [[4, "qwak.StochasticOperator.StochasticOperator"]], "stochasticprobabilitydistribution (class in qwak.stochasticprobabilitydistribution)": [[4, "qwak.StochasticProbabilityDistribution.StochasticProbabilityDistribution"]], "stochasticqwak (class in qwak.stochasticqwak)": [[4, "qwak.StochasticQwak.StochasticQWAK"]], "stochasticquantumwalk (class in qwak.stochasticquantumwalk)": [[4, "qwak.StochasticQuantumWalk.StochasticQuantumWalk"]], "undefinedtimelist": [[4, "qwak.Errors.UndefinedTimeList"]], "_buildclassicalhamiltonian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator._buildClassicalHamiltonian"]], "_buildeigenvalues() (operator method)": [[4, "qwak.Operator.Operator._buildEigenValues"]], "_buildhamiltonian() (operator method)": [[4, "qwak.Operator.Operator._buildHamiltonian"]], "_buildlaplacian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator._buildLaplacian"]], "_buildquantumhamiltonian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator._buildQuantumHamiltonian"]], "_buildsearchhamiltonian() (operator method)": [[4, "qwak.Operator.Operator._buildSearchHamiltonian"]], "_checkstateoutofbounds() (state method)": [[4, "qwak.State.State._checkStateOutOfBounds"]], "_checkunitarystatelist() (state method)": [[4, "qwak.State.State._checkUnitaryStateList"]], "_degreediagonalmatrix() (operator static method)": [[4, "qwak.Operator.Operator._degreeDiagonalMatrix"]], "_hermitiantest() (operator method)": [[4, "qwak.Operator.Operator._hermitianTest"]], "_setadjacencymatrixonly() (operator method)": [[4, "qwak.Operator.Operator._setAdjacencyMatrixOnly"]], "_seteigenvalues() (operator method)": [[4, "qwak.Operator.Operator._setEigenValues"]], "_seteigenvectors() (operator method)": [[4, "qwak.Operator.Operator._setEigenVectors"]], "_setoperatorvec() (operator method)": [[4, "qwak.Operator.Operator._setOperatorVec"]], "as_string() (error method)": [[4, "qwak.Errors.Error.as_string"]], "builddiagonaloperator() (operator method)": [[4, "qwak.Operator.Operator.buildDiagonalOperator"]], "buildexpmoperator() (operator method)": [[4, "qwak.Operator.Operator.buildExpmOperator"]], "buildprobdist() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.buildProbDist"]], "buildprobdist() (stochasticprobabilitydistribution method)": [[4, "qwak.StochasticProbabilityDistribution.StochasticProbabilityDistribution.buildProbDist"]], "buildstate() (state method)": [[4, "qwak.State.State.buildState"]], "buildstochasticoperator() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.buildStochasticOperator"]], "buildwalk() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.buildWalk"]], "buildwalk() (stochasticquantumwalk method)": [[4, "qwak.StochasticQuantumWalk.StochasticQuantumWalk.buildWalk"]], "checkpst() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.checkPST"]], "checkpst() (operator method)": [[4, "qwak.Operator.Operator.checkPST"]], "checkpst() (qwak method)": [[4, "qwak.qwak.QWAK.checkPST"]], "checkpst_sympy() (qwak method)": [[4, "qwak.qwak.QWAK.checkPST_sympy"]], "from_json() (graphicalqwak class method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.from_json"]], "from_json() (operator class method)": [[4, "qwak.Operator.Operator.from_json"]], "from_json() (probabilitydistribution class method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.from_json"]], "from_json() (qwak class method)": [[4, "qwak.qwak.QWAK.from_json"]], "from_json() (quantumwalk class method)": [[4, "qwak.QuantumWalk.QuantumWalk.from_json"]], "from_json() (state class method)": [[4, "qwak.State.State.from_json"]], "getadjacencymatrix() (operator method)": [[4, "qwak.Operator.Operator.getAdjacencyMatrix"]], "getadjacencymatrix() (qwak method)": [[4, "qwak.qwak.QWAK.getAdjacencyMatrix"]], "getampvec() (qwak method)": [[4, "qwak.qwak.QWAK.getAmpVec"]], "getampvec() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.getAmpVec"]], "getclassicalhamiltonian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.getClassicalHamiltonian"]], "getclassicalhamiltonian() (stochasticqwak method)": [[4, "qwak.StochasticQwak.StochasticQWAK.getClassicalHamiltonian"]], "getdim() (operator method)": [[4, "qwak.Operator.Operator.getDim"]], "getdim() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.getDim"]], "getdim() (qwak method)": [[4, "qwak.qwak.QWAK.getDim"]], "getdim() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.getDim"]], "getdim() (state method)": [[4, "qwak.State.State.getDim"]], "getdim() (stochasticquantumwalk method)": [[4, "qwak.StochasticQuantumWalk.StochasticQuantumWalk.getDim"]], "getdynamicadjacencymatrix() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicAdjacencyMatrix"]], "getdynamicdim() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicDim"]], "getdynamicgraph() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicGraph"]], "getdynamicgraphtojson() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicGraphToJson"]], "getdynamicinitstatelist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicInitStateList"]], "getdynamicinvpartratio() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicInvPartRatio"]], "getdynamicmean() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicMean"]], "getdynamicprobdistlist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicProbDistList"]], "getdynamicprobveclist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicProbVecList"]], "getdynamicsndmoment() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicSndMoment"]], "getdynamicstdev() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicStDev"]], "getdynamicsurvivalprob() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicSurvivalProb"]], "getdynamictime() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicTime"]], "getdynamicwalklist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getDynamicWalkList"]], "geteigenvalues() (operator method)": [[4, "qwak.Operator.Operator.getEigenValues"]], "geteigenvectors() (operator method)": [[4, "qwak.Operator.Operator.getEigenVectors"]], "getfinalstate() (qwak method)": [[4, "qwak.qwak.QWAK.getFinalState"]], "getfinalstate() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.getFinalState"]], "getfinalstate() (stochasticquantumwalk method)": [[4, "qwak.StochasticQuantumWalk.StochasticQuantumWalk.getFinalState"]], "getgraph() (qwak method)": [[4, "qwak.qwak.QWAK.getGraph"]], "gethamiltonian() (operator method)": [[4, "qwak.Operator.Operator.getHamiltonian"]], "gethamiltonian() (qwak method)": [[4, "qwak.qwak.QWAK.getHamiltonian"]], "getinitstate() (qwak method)": [[4, "qwak.qwak.QWAK.getInitState"]], "getinitstate() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.getInitState"]], "getinversepartratio() (qwak method)": [[4, "qwak.qwak.QWAK.getInversePartRatio"]], "getinversepartratiolist() (qwak method)": [[4, "qwak.qwak.QWAK.getInversePartRatioList"]], "getlaplacian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.getLaplacian"]], "getlaplacian() (stochasticqwak method)": [[4, "qwak.StochasticQwak.StochasticQWAK.getLaplacian"]], "getmarkedelements() (operator method)": [[4, "qwak.Operator.Operator.getMarkedElements"]], "getmarkedelements() (qwak method)": [[4, "qwak.qwak.QWAK.getMarkedElements"]], "getmean() (qwak method)": [[4, "qwak.qwak.QWAK.getMean"]], "getmeanlist() (qwak method)": [[4, "qwak.qwak.QWAK.getMeanList"]], "getnodelist() (state method)": [[4, "qwak.State.State.getNodeList"]], "getoperator() (operator method)": [[4, "qwak.Operator.Operator.getOperator"]], "getoperator() (qwak method)": [[4, "qwak.qwak.QWAK.getOperator"]], "getoperator() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.getOperator"]], "getprobdist() (qwak method)": [[4, "qwak.qwak.QWAK.getProbDist"]], "getprobdist() (stochasticqwak method)": [[4, "qwak.StochasticQwak.StochasticQWAK.getProbDist"]], "getprobdistlist() (qwak method)": [[4, "qwak.qwak.QWAK.getProbDistList"]], "getprobvec() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.getProbVec"]], "getprobvec() (qwak method)": [[4, "qwak.qwak.QWAK.getProbVec"]], "getprobvec() (stochasticprobabilitydistribution method)": [[4, "qwak.StochasticProbabilityDistribution.StochasticProbabilityDistribution.getProbVec"]], "getprobvec() (stochasticqwak method)": [[4, "qwak.StochasticQwak.StochasticQWAK.getProbVec"]], "getprobveclist() (qwak method)": [[4, "qwak.qwak.QWAK.getProbVecList"]], "getqwak() (qwak method)": [[4, "qwak.qwak.QWAK.getQWAK"]], "getqwakid() (qwak method)": [[4, "qwak.qwak.QWAK.getQWAKId"]], "getquantumhamiltonian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.getQuantumHamiltonian"]], "getquantumhamiltonian() (stochasticqwak method)": [[4, "qwak.StochasticQwak.StochasticQWAK.getQuantumHamiltonian"]], "getqwakid() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getQwakId"]], "getsinknode() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.getSinkNode"]], "getsndmoment() (qwak method)": [[4, "qwak.qwak.QWAK.getSndMoment"]], "getstdev() (qwak method)": [[4, "qwak.qwak.QWAK.getStDev"]], "getstdevlist() (qwak method)": [[4, "qwak.qwak.QWAK.getStDevList"]], "getstate() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.getState"]], "getstatevec() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.getStateVec"]], "getstatevec() (state method)": [[4, "qwak.State.State.getStateVec"]], "getstaticadjacencymatrix() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticAdjacencyMatrix"]], "getstaticdim() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticDim"]], "getstaticgraph() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticGraph"]], "getstaticgraphtojson() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticGraphToJson"]], "getstaticinitstate() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticInitState"]], "getstaticinversepartratio() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticInversePartRatio"]], "getstaticmean() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticMean"]], "getstaticprobdist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticProbDist"]], "getstaticprobvec() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticProbVec"]], "getstaticqwak() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticQWAK"]], "getstaticsndmoment() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticSndMoment"]], "getstaticstdev() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticStDev"]], "getstaticsurvivalprob() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticSurvivalProb"]], "getstatictime() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticTime"]], "getstaticwalk() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.getStaticWalk"]], "getsurvivalprob() (qwak method)": [[4, "qwak.qwak.QWAK.getSurvivalProb"]], "getsurvivalproblist() (qwak method)": [[4, "qwak.qwak.QWAK.getSurvivalProbList"]], "gettime() (operator method)": [[4, "qwak.Operator.Operator.getTime"]], "gettime() (qwak method)": [[4, "qwak.qwak.QWAK.getTime"]], "gettimelist() (qwak method)": [[4, "qwak.qwak.QWAK.getTimeList"]], "gettransportefficiency() (qwak method)": [[4, "qwak.qwak.QWAK.getTransportEfficiency"]], "getwalk() (qwak method)": [[4, "qwak.qwak.QWAK.getWalk"]], "herm() (state method)": [[4, "qwak.State.State.herm"]], "inv() (state method)": [[4, "qwak.State.State.inv"]], "invpartratio() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.invPartRatio"]], "module": [[4, "module-qwak"], [4, "module-qwak.Errors"], [4, "module-qwak.GraphicalQWAK"], [4, "module-qwak.Operator"], [4, "module-qwak.ProbabilityDistribution"], [4, "module-qwak.QuantumWalk"], [4, "module-qwak.State"], [4, "module-qwak.StochasticOperator"], [4, "module-qwak.StochasticProbabilityDistribution"], [4, "module-qwak.StochasticQuantumWalk"], [4, "module-qwak.StochasticQwak"], [4, "module-qwak.qwak"], [6, "module-utils"], [6, "module-utils.PerfectStateTransfer"], [6, "module-utils.jsonTools"], [6, "module-utils.plotTools"]], "moment() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.moment"]], "qwak": [[4, "module-qwak"]], "qwak.errors": [[4, "module-qwak.Errors"]], "qwak.graphicalqwak": [[4, "module-qwak.GraphicalQWAK"]], "qwak.operator": [[4, "module-qwak.Operator"]], "qwak.probabilitydistribution": [[4, "module-qwak.ProbabilityDistribution"]], "qwak.quantumwalk": [[4, "module-qwak.QuantumWalk"]], "qwak.state": [[4, "module-qwak.State"]], "qwak.stochasticoperator": [[4, "module-qwak.StochasticOperator"]], "qwak.stochasticprobabilitydistribution": [[4, "module-qwak.StochasticProbabilityDistribution"]], "qwak.stochasticquantumwalk": [[4, "module-qwak.StochasticQuantumWalk"]], "qwak.stochasticqwak": [[4, "module-qwak.StochasticQwak"]], "qwak.qwak": [[4, "module-qwak.qwak"]], "resetoperator() (operator method)": [[4, "qwak.Operator.Operator.resetOperator"]], "resetprobdist() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.resetProbDist"]], "resetstate() (state method)": [[4, "qwak.State.State.resetState"]], "resetwalk() (qwak method)": [[4, "qwak.qwak.QWAK.resetWalk"]], "resetwalk() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.resetWalk"]], "runexpmwalk() (qwak method)": [[4, "qwak.qwak.QWAK.runExpmWalk"]], "runmultipleexpmwalks() (qwak method)": [[4, "qwak.qwak.QWAK.runMultipleExpmWalks"]], "runmultiplewalks() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.runMultipleWalks"]], "runmultiplewalks() (qwak method)": [[4, "qwak.qwak.QWAK.runMultipleWalks"]], "runwalk() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.runWalk"]], "runwalk() (qwak method)": [[4, "qwak.qwak.QWAK.runWalk"]], "runwalk() (stochasticqwak method)": [[4, "qwak.StochasticQwak.StochasticQWAK.runWalk"]], "searchnodeamplitude() (qwak method)": [[4, "qwak.qwak.QWAK.searchNodeAmplitude"]], "searchnodeamplitude() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.searchNodeAmplitude"]], "searchnodeprobability() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.searchNodeProbability"]], "searchnodeprobability() (qwak method)": [[4, "qwak.qwak.QWAK.searchNodeProbability"]], "setadjacencymatrix() (operator method)": [[4, "qwak.Operator.Operator.setAdjacencyMatrix"]], "setadjacencymatrix() (qwak method)": [[4, "qwak.qwak.QWAK.setAdjacencyMatrix"]], "setclassicalhamiltonian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.setClassicalHamiltonian"]], "setcustomgraph() (qwak method)": [[4, "qwak.qwak.QWAK.setCustomGraph"]], "setdim() (operator method)": [[4, "qwak.Operator.Operator.setDim"]], "setdim() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.setDim"]], "setdim() (qwak method)": [[4, "qwak.qwak.QWAK.setDim"]], "setdim() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.setDim"]], "setdim() (state method)": [[4, "qwak.State.State.setDim"]], "setdynamiccustomgraph() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicCustomGraph"]], "setdynamicdim() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicDim"]], "setdynamicgraph() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicGraph"]], "setdynamicinitstatelist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicInitStateList"]], "setdynamicprobdistlist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicProbDistList"]], "setdynamicqwak() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicQWAK"]], "setdynamictime() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicTime"]], "setdynamictimelist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicTimeList"]], "setdynamicwalklist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setDynamicWalkList"]], "setfinalstate() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.setFinalState"]], "setfinalstate() (stochasticquantumwalk method)": [[4, "qwak.StochasticQuantumWalk.StochasticQuantumWalk.setFinalState"]], "setgraph() (qwak method)": [[4, "qwak.qwak.QWAK.setGraph"]], "sethamiltonian() (operator method)": [[4, "qwak.Operator.Operator.setHamiltonian"]], "sethamiltonian() (qwak method)": [[4, "qwak.qwak.QWAK.setHamiltonian"]], "setinitstate() (qwak method)": [[4, "qwak.qwak.QWAK.setInitState"]], "setinitstate() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.setInitState"]], "setmarkedelements() (operator method)": [[4, "qwak.Operator.Operator.setMarkedElements"]], "setmarkedelements() (qwak method)": [[4, "qwak.qwak.QWAK.setMarkedElements"]], "setnodelist() (state method)": [[4, "qwak.State.State.setNodeList"]], "setoperator() (operator method)": [[4, "qwak.Operator.Operator.setOperator"]], "setoperator() (qwak method)": [[4, "qwak.qwak.QWAK.setOperator"]], "setoperator() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.setOperator"]], "setprobdist() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.setProbDist"]], "setprobdist() (qwak method)": [[4, "qwak.qwak.QWAK.setProbDist"]], "setprobdist() (stochasticqwak method)": [[4, "qwak.StochasticQwak.StochasticQWAK.setProbDist"]], "setprobdistlist() (qwak method)": [[4, "qwak.qwak.QWAK.setProbDistList"]], "setprobvec() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.setProbVec"]], "setprobvec() (stochasticprobabilitydistribution method)": [[4, "qwak.StochasticProbabilityDistribution.StochasticProbabilityDistribution.setProbVec"]], "setqwak() (qwak method)": [[4, "qwak.qwak.QWAK.setQWAK"]], "setquantumhamiltonian() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.setQuantumHamiltonian"]], "setqwakid() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setQwakId"]], "setsinknode() (stochasticoperator method)": [[4, "qwak.StochasticOperator.StochasticOperator.setSinkNode"]], "setstate() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.setState"]], "setstate() (state method)": [[4, "qwak.State.State.setState"]], "setstatevec() (state method)": [[4, "qwak.State.State.setStateVec"]], "setstaticcustomgraph() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setStaticCustomGraph"]], "setstaticdim() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setStaticDim"]], "setstaticgraph() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setStaticGraph"]], "setstaticinitstate() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setStaticInitState"]], "setstaticprobdist() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setStaticProbDist"]], "setstaticqwak() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setStaticQWAK"]], "setstatictime() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.setStaticTime"]], "settime() (operator method)": [[4, "qwak.Operator.Operator.setTime"]], "settime() (qwak method)": [[4, "qwak.qwak.QWAK.setTime"]], "settimelist() (qwak method)": [[4, "qwak.qwak.QWAK.setTimeList"]], "setwalk() (qwak method)": [[4, "qwak.qwak.QWAK.setWalk"]], "setwalk() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.setWalk"]], "stdev() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.stDev"]], "survivalprob() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.survivalProb"]], "to_json() (graphicalqwak method)": [[4, "qwak.GraphicalQWAK.GraphicalQWAK.to_json"]], "to_json() (operator method)": [[4, "qwak.Operator.Operator.to_json"]], "to_json() (probabilitydistribution method)": [[4, "qwak.ProbabilityDistribution.ProbabilityDistribution.to_json"]], "to_json() (qwak method)": [[4, "qwak.qwak.QWAK.to_json"]], "to_json() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.to_json"]], "to_json() (state method)": [[4, "qwak.State.State.to_json"]], "transportefficiency() (quantumwalk method)": [[4, "qwak.QuantumWalk.QuantumWalk.transportEfficiency"]], "qwak (built-in class)": [[5, "QWAK"]], "checkroots() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.checkRoots"]], "complex_matrix_to_json() (in module utils.jsontools)": [[6, "utils.jsonTools.complex_matrix_to_json"]], "complex_to_json() (in module utils.jsontools)": [[6, "utils.jsonTools.complex_to_json"]], "convert_cytoscape_to_decimal() (in module utils.jsontools)": [[6, "utils.jsonTools.convert_cytoscape_to_decimal"]], "geteigensupp() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.getEigenSupp"]], "geteigenval() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.getEigenVal"]], "getsquarefree() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.getSquareFree"]], "issimplepoles() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.isSimplePoles"]], "isstrcospec() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.isStrCospec"]], "json_matrix_to_complex() (in module utils.jsontools)": [[6, "utils.jsonTools.json_matrix_to_complex"]], "json_to_complex() (in module utils.jsontools)": [[6, "utils.jsonTools.json_to_complex"]], "plot_qwak() (in module utils.plottools)": [[6, "utils.plotTools.plot_qwak"]], "plot_qwak_heatmap() (in module utils.plottools)": [[6, "utils.plotTools.plot_qwak_heatmap"]], "sieveeratosthenes() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.sieveEratosthenes"]], "swapnodes() (in module utils.perfectstatetransfer)": [[6, "utils.PerfectStateTransfer.swapNodes"]], "utils": [[6, "module-utils"]], "utils.perfectstatetransfer": [[6, "module-utils.PerfectStateTransfer"]], "utils.jsontools": [[6, "module-utils.jsonTools"]], "utils.plottools": [[6, "module-utils.plotTools"]]}})